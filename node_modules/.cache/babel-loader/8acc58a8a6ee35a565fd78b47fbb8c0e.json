{"ast":null,"code":"import _slicedToArray from\"/var/www/html2/glpi-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import ChartDataLabels from'chartjs-plugin-datalabels';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{Bar}from'react-chartjs-2';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);function SatisfactionByEntiter(props){var _useState=useState(props.chartDaa),_useState2=_slicedToArray(_useState,2),chartData=_useState2[0],setChartData=_useState2[1];var _useState3=useState(props.chartLebels),_useState4=_slicedToArray(_useState3,2),chartlebels=_useState4[0],setChartlebels=_useState4[1];useEffect(function(){setChartData(props.chartData);setChartlebels(props.chartLebels);});var data={labels:chartlebels,datasets:[{label:\"line\",data:chartData,backgroundColor:['rgba(255, 99, 132, 1)','rgba(54, 162, 235, 1)','rgba(255, 206, 86, 1)','rgba(75, 192, 192, 1)','rgba(153, 102, 255, 1)','rgba(255, 159, 64, 1)'],borderColor:['rgba(255, 99, 132, 1)','rgba(54, 162, 235, 1)','rgba(255, 206, 86, 1)','rgba(75, 192, 192, 1)','rgba(153, 102, 255, 1)','rgba(255, 159, 64, 1)'],borderWidth:1}]};var options={tooltips:{enabled:false},plugins:{datalabels:{formatter:function formatter(value,ctx){var percentage=(value*100/5).toFixed(2)+\"%\";return percentage;},color:'black'}}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Satisfaction par Entites\"}),/*#__PURE__*/_jsx(Bar,{data:data,plugins:[ChartDataLabels],options:options})]});}export default SatisfactionByEntiter;","map":{"version":3,"names":["React","useState","useEffect","ChartDataLabels","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","axios","register","SatisfactionByEntiter","props","chartDaa","chartData","setChartData","chartLebels","chartlebels","setChartlebels","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","tooltips","enabled","plugins","datalabels","formatter","value","ctx","percentage","toFixed","color"],"sources":["/var/www/html2/glpi-app/src/charts/SatisfactionByEntiter.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\n\n\n\nfunction SatisfactionByEntiter(props) {\n    const [chartData, setChartData] = useState(props.chartDaa)\n    const [chartlebels, setChartlebels] = useState(props.chartLebels)\n    useEffect(()=>{\n        setChartData(props.chartData)\n        setChartlebels(props.chartLebels)   \n    })\n   \n\n    const data = {\n        labels: chartlebels,\n        datasets: [\n            {\n                label: \"line\",\n                data: chartData,\n                backgroundColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    }\n    var options = {\n        tooltips: {\n            enabled: false\n        },\n        plugins: {\n            datalabels: {\n                formatter: (value, ctx) => {\n                    let percentage = (value*100 / 5).toFixed(2)+\"%\";\n                    return percentage;\n                },\n                \n                color: 'black',\n            }\n        }\n    };\n    return (\n        <div>\n            <h1>Satisfaction par Entites</h1>\n            <Bar  data={data} plugins={[ChartDataLabels]} options={options} />\n        </div>\n    )\n}\nexport default SatisfactionByEntiter;"],"mappings":"6GAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAAyBC,SAAzB,KAA0C,OAA1C,CACA,MAAOC,CAAAA,eAAP,KAA4B,2BAA5B,CAAwD,OACpDC,KAAK,GAAIC,CAAAA,OAD2C,CAEpDC,aAFoD,CAGpDC,WAHoD,CAIpDC,UAJoD,CAKpDC,KALoD,CAMpDC,OANoD,CAOpDC,MAPoD,KAQjD,UARiD,CASxD,OAASC,GAAT,KAAoB,iBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEAR,OAAO,CAACS,QAAR,CACIR,aADJ,CAEIC,WAFJ,CAGIC,UAHJ,CAIIC,KAJJ,CAKIC,OALJ,CAMIC,MANJ,EAYA,QAASI,CAAAA,qBAAT,CAA+BC,KAA/B,CAAsC,CAClC,cAAkCf,QAAQ,CAACe,KAAK,CAACC,QAAP,CAA1C,wCAAOC,SAAP,eAAkBC,YAAlB,eACA,eAAsClB,QAAQ,CAACe,KAAK,CAACI,WAAP,CAA9C,yCAAOC,WAAP,eAAoBC,cAApB,eACApB,SAAS,CAAC,UAAI,CACViB,YAAY,CAACH,KAAK,CAACE,SAAP,CAAZ,CACAI,cAAc,CAACN,KAAK,CAACI,WAAP,CAAd,CACH,CAHQ,CAAT,CAMA,GAAMG,CAAAA,IAAI,CAAG,CACTC,MAAM,CAAEH,WADC,CAETI,QAAQ,CAAE,CACN,CACIC,KAAK,CAAE,MADX,CAEIH,IAAI,CAAEL,SAFV,CAGIS,eAAe,CAAE,CACb,uBADa,CAEb,uBAFa,CAGb,uBAHa,CAIb,uBAJa,CAKb,wBALa,CAMb,uBANa,CAHrB,CAWIC,WAAW,CAAE,CACT,uBADS,CAET,uBAFS,CAGT,uBAHS,CAIT,uBAJS,CAKT,wBALS,CAMT,uBANS,CAXjB,CAmBIC,WAAW,CAAE,CAnBjB,CADM,CAFD,CAAb,CA0BA,GAAIC,CAAAA,OAAO,CAAG,CACVC,QAAQ,CAAE,CACNC,OAAO,CAAE,KADH,CADA,CAIVC,OAAO,CAAE,CACLC,UAAU,CAAE,CACRC,SAAS,CAAE,mBAACC,KAAD,CAAQC,GAAR,CAAgB,CACvB,GAAIC,CAAAA,UAAU,CAAG,CAACF,KAAK,CAAC,GAAN,CAAY,CAAb,EAAgBG,OAAhB,CAAwB,CAAxB,EAA2B,GAA5C,CACA,MAAOD,CAAAA,UAAP,CACH,CAJO,CAMRE,KAAK,CAAE,OANC,CADP,CAJC,CAAd,CAeA,mBACI,oCACI,gDADJ,cAEI,KAAC,GAAD,EAAM,IAAI,CAAEjB,IAAZ,CAAkB,OAAO,CAAE,CAACpB,eAAD,CAA3B,CAA8C,OAAO,CAAE2B,OAAvD,EAFJ,GADJ,CAMH,CACD,cAAef,CAAAA,qBAAf"},"metadata":{},"sourceType":"module"}